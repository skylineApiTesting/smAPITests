{
  "info": {
    "_postman_id": "1ac2ad22-d339-4faa-b74d-2c276b019520",
    "name": "Stream Manager Operator",
    "description": "This collection contains tests for stream manager APIs to run as an operator user.\n\nDocumentation for stream manager APIs can be found on 172.28.12.54/docs",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "dff94900-a31a-4648-9b9b-93b2fdc35001",
      "name": "Streams",
      "description": "API tests for streams tab for operators",
      "item": [
        {
          "_postman_id": "0a3592ef-a974-4462-bf9c-4c634c196e25",
          "name": "Login Operator",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8a81fe8e-d0ec-4a6f-a893-47108cdd8e4f",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Body IsAdministrator field to show it is logged in\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"IsAdministrator=false ;\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "user",
                  "value": "{{user}}",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "{{password}}",
                  "type": "text"
                }
              ]
            },
            "url": "{{url}}",
            "description": "logs in with a valid username\nadmin - admin / sm1000\noperator - operator / sm1000"
          },
          "response": []
        },
        {
          "_postman_id": "8a582192-4aef-419a-b631-07ad567f2195",
          "name": "Get grid",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1a03e176-fca7-4fbe-909b-b73dad6e56bc",
                "exec": [
                  "pm.test(\"C78229 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"C78229 Success message present\", function () {",
                  "    pm.expect(pm.response.text()).to.include('\"success\":true');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"action\": \"Streams\",\n\t\"method\": \"getGrid\",\n\t\"data\": [\n\t\t{\n\t\t\t\"page\": 1,\n\t\t\t\"start\": 0,\n\t\t\t\"limit\": 25,\n\t\t\t\"group\": [\n\t\t\t\t{\n\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"sort\": [\n\t\t\t\t{\n\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"property\": \"name\",\n\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"type\": \"rpc\",\n\t\"tid\": 21\n}"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "returns a list of camera streams (camera grid)"
          },
          "response": []
        },
        {
          "_postman_id": "234187b2-c189-4f3e-8fc7-f6e82e8a85d3",
          "name": "View a stream",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "62c5ee91-626f-487f-9f9b-3eb440859912",
                "exec": [
                  "pm.test(\"C78230 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"C78230 Verify stream info was returned\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData[0].result.success).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"action\": \"Streams\",\n    \"method\": \"getAppliancesFromMetadata\",\n    \"data\": [\n      {\n        \"metadataId\": 6,\n        \"clearCache\": false,\n        \"page\": 1,\n        \"start\": 0,\n        \"limit\": 25,\n        \"sort\": [\n          {\n            \"property\": \"model\",\n            \"direction\": \"ASC\"\n          }\n        ]\n      }\n    ],\n    \"type\": \"rpc\",\n    \"tid\": 15\n  },\n  {\n    \"action\": \"Streams\",\n    \"method\": \"getAppliancesFromMetadata\",\n    \"data\": [\n      {\n        \"metadataId\": 6,\n        \"clearCache\": false,\n        \"page\": 1,\n        \"start\": 0,\n        \"limit\": 25,\n        \"sort\": [\n          {\n            \"property\": \"model\",\n            \"direction\": \"ASC\"\n          }\n        ]\n      }\n    ],\n    \"type\": \"rpc\",\n    \"tid\": 16\n  }\n]"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "get information for a specific stream"
          },
          "response": []
        },
        {
          "_postman_id": "e6ac1922-313c-4b27-b66d-9c873c735b65",
          "name": "Update Stream Metadata - Operator Cannot Update",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "85babbf0-3b57-40a7-b91c-ae6d36811bb0",
                "exec": [
                  "pm.test(\"C78231 Verify operator cannot have edited stream\", function () {",
                  "    pm.expect(pm.response.text()).to.not.include('\"result\":{\"success\":true}}');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/plain"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "extTID",
                  "value": "17",
                  "type": "text"
                },
                {
                  "key": "extAction",
                  "value": "Streams",
                  "type": "text"
                },
                {
                  "key": "extMethod",
                  "value": "updateMetadata",
                  "type": "text"
                },
                {
                  "key": "extType",
                  "value": "rpc",
                  "type": "text"
                },
                {
                  "key": "extUpload",
                  "value": "false",
                  "type": "text"
                },
                {
                  "key": "id",
                  "value": "6",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "test_stream_cam_to_multiple_sfsEDITED",
                  "type": "text"
                },
                {
                  "key": "jurisdiction",
                  "value": "test jurisdiction EDITED",
                  "type": "text"
                },
                {
                  "key": "route_name",
                  "value": "test route EDITED",
                  "type": "text"
                },
                {
                  "key": "mile_marker",
                  "value": "66",
                  "type": "text"
                },
                {
                  "key": "traffic_direction",
                  "value": "S",
                  "type": "text"
                },
                {
                  "key": "latitude",
                  "value": "50",
                  "type": "text"
                },
                {
                  "key": "longitude",
                  "value": "50",
                  "type": "text"
                },
                {
                  "key": "deviceid",
                  "value": "",
                  "type": "text"
                }
              ]
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "important things to know for the test:\n\nyou will need the id (or metadataID) to change the stream. that id is the unique identifier of the stream.\n\nwe need a way to mass update metadata for load testing."
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "db795be1-2496-43d5-a9d4-2a31812ef0a1",
      "name": "Appliances",
      "description": "Tests which are used for the appliance tab of stream manager.",
      "item": [
        {
          "_postman_id": "956fa7e0-9e1e-47d8-a2fa-2d6c8427bb80",
          "name": "Retrieve appliance",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0db209bd-a2bd-44a2-8a16-f7674e86277d",
                "exec": [
                  "pm.test(\"C78183 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"C78183 Correct Hostname\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"hostname\\\":\\\"Jennnn-ts\\\"\");",
                  "});",
                  "",
                  "pm.test(\"C78183 Correct Model\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"model\\\":\\\"SFS1000\\\"\");",
                  "});",
                  "",
                  "sfsVersion = pm.environment.get(\"SfsVersion\");",
                  "pm.test(\"C78183 Correct SFS Version\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"\\\"software_version\\\":\\\"0.0.999\\\"\");",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d14d5469-f58b-46b0-822e-7d9f790fed06",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"Appliance\",\n  \"method\": \"getAppliances\",\n  \"data\": [\n    {\n      \"page\": 1,\n      \"start\": 0,\n      \"limit\": 25,\n      \"group\": [\n        {\n          \"property\": \"location_name\",\n          \"direction\": \"ASC\"\n        }\n      ],\n      \"sort\": [\n        {\n          \"property\": \"location_name\",\n          \"direction\": \"ASC\"\n        }\n      ]\n    }\n  ],\n  \"type\": \"rpc\",\n  \"tid\": 15\n}"
            },
            "url": "{{url}}/{{version}}/direct/router/"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "4ded32af-684c-406c-a06b-32191c80030e",
      "name": "Profile",
      "description": "api calls that help you manage user profile",
      "item": [
        {
          "_postman_id": "9431b36c-51ff-4fdf-b886-36c142ffe195",
          "name": "Login As Other Operator",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8a81fe8e-d0ec-4a6f-a893-47108cdd8e4f",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "    ",
                  "pm.test(\"Body shows Operator Logged in\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"IsAdministrator=false ;\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "user",
                  "type": "text",
                  "value": "{{operator_2}}"
                },
                {
                  "key": "password",
                  "value": "{{operator_2_password}}",
                  "description": "",
                  "type": "text"
                }
              ]
            },
            "url": "{{url}}",
            "description": "logs in with a valid username\nadmin - admin / sm1000\noperator - operator / sm1000"
          },
          "response": []
        },
        {
          "_postman_id": "d18b7952-b37f-4716-9a85-2a97f7fb41fe",
          "name": "Read Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b873ecaf-b3eb-4cfb-ae8f-4773be5da451",
                "exec": [
                  "pm.test(\"C78211 Set operator id environment variable\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    var operator_id = jsonData[0].result.records.id;",
                  "    pm.environment.set(\"operator_id\", operator_id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n\t{\n\t\t\"action\": \"Users\",\n\t\t\"method\": \"getUsers\",\n\t\t\"data\": null,\n\t\t\"type\": \"rpc\",\n\t\t\"tid\": 10\n\t}\n]"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "Retrieves a list of users. if you are an admin, you should see all the users. if you are an operator, you should only see yourself."
          },
          "response": []
        },
        {
          "_postman_id": "7db93258-c620-4484-8c7e-fa942ce368bb",
          "name": "Update operator profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "99fe64b1-19ab-4b7f-9d4f-01696e144f19",
                "exec": [
                  "pm.test(\"C78149 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"C78149 operator was updated\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData[0].result.success).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"C78149 Body contains new email\", function () {",
                  "    pm.expect(pm.response.text()).to.include('\"email\":\"jpeeling_edit@skylinenet.net\"');",
                  "});",
                  "",
                  "pm.test(\"C78149 Body contains new personal name\", function () {",
                  "    pm.expect(pm.response.text()).to.include('\"personal_name\":\"Jennnnnnnnnnnn\"');",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4b491a78-3df2-49f3-a594-8663feab62cf",
                "exec": [
                  "pm.environment.set(\"operator_2_password_edit\", \"{{operator_2_password}}\"+\"edit\");",
                  "pm.environment.get(\"variable_key\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n\t{\n\t\t\"action\": \"Users\",\n\t\t\"method\": \"updateUser\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"id\": \"{{operator_id}}\",\n\t\t\t\t\"username\": \"User 1533235445\",\n\t\t\t\t\"password\": \"{{operator_2_password_edit}}\",\n\t\t\t\t\"personal_name\": \"Jennnnnnnnnnnn\",\n\t\t\t\t\"email\": \"jpeeling_edit@skylinenet.net\",\n\t\t\t\t\"date_created\": {\n\t\t\t\t\t\"date\": \"2018-06-25 14:28:11.000000\",\n\t\t\t\t\t\"timezone_type\": 3,\n\t\t\t\t\t\"timezone\": \"GMT\"\n\t\t\t\t},\n\t\t\t\t\"is_admin\": false\n\t\t\t}\n\t\t],\n\t\t\"type\": \"rpc\",\n\t\t\"tid\": 14\n\t}\n]"
            },
            "url": "{{url}}/{{version}}/direct/router"
          },
          "response": []
        },
        {
          "_postman_id": "dfc09181-c919-4e89-9bd5-ba6d1305f552",
          "name": "Login With New Password",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8a81fe8e-d0ec-4a6f-a893-47108cdd8e4f",
                "exec": [
                  "pm.test(\"C78212 Body shows Operator Logged in\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"IsAdministrator=false ;\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "user",
                  "type": "text",
                  "value": "{{operator_2}}"
                },
                {
                  "key": "password",
                  "value": "{{operator_2_password_edit}}",
                  "description": "",
                  "type": "text"
                }
              ]
            },
            "url": "{{url}}",
            "description": "logs in with a valid username\nadmin - admin / sm1000\noperator - operator / sm1000"
          },
          "response": []
        },
        {
          "_postman_id": "8ad0deeb-b6b2-4c02-8d70-43bde2d5d4a3",
          "name": "Cannot Make Self Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e76c4384-7964-4d88-a45f-77eda40df52c",
                "exec": [
                  "pm.test(\"C78150 Operator cant make self admin\", function () {",
                  "    pm.expect(pm.response.text()).to.include('\"success\":false');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n\t{\n\t\t\"action\": \"Users\",\n\t\t\"method\": \"updateUser\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"id\": {{operator_id}},\n\t\t\t\t\"username\": \"{{operator_un}}\",\n\t\t\t\t\"password\": \"{{password}}\",\n\t\t\t\t\"personal_name\": \"test\",\n\t\t\t\t\"email\": \"{{operator_email}}\",\n\t\t\t\t\"date_created\": {\n\t\t\t\t\t\"date\": \"2018-06-19 19:04:09.000000\",\n\t\t\t\t\t\"timezone_type\": 3,\n\t\t\t\t\t\"timezone\": \"GMT\"\n\t\t\t\t},\n\t\t\t\t\"is_admin\": true\n\t\t\t}\n\t\t],\n\t\t\"type\": \"rpc\",\n\t\t\"tid\": 25\n\t}\n]"
            },
            "url": "{{url}}/{{version}}/direct/router"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "97e6b17b-4db8-4ebd-bfe3-11f69960517c",
      "name": "Get Lists",
      "description": "get lists of different items/information from stream manager.",
      "item": [
        {
          "_postman_id": "08156533-f3df-4fe0-ab62-b733c6971d0a",
          "name": "Login Operator",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8a81fe8e-d0ec-4a6f-a893-47108cdd8e4f",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "    ",
                  "pm.test(\"Body IsAdministrator field to show it is logged in\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"IsAdministrator=false ;\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "user",
                  "value": "{{user}}",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "{{password}}",
                  "type": "text"
                }
              ]
            },
            "url": "{{url}}",
            "description": "logs in with a valid username\nadmin - admin / sm1000\noperator - operator / sm1000"
          },
          "response": []
        },
        {
          "_postman_id": "4113826f-5414-4bbb-878a-4faed02b49cd",
          "name": "Get All Contacts",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bd01da50-638a-4d06-ac48-355d8066b431",
                "exec": [
                  "pm.test(\"C123397 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n\t{\n\t\t\"action\": \"Contact\",\n\t\t\"method\": \"getContacts\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"page\": 1,\n\t\t\t\t\"start\": 0,\n\t\t\t\t\"limit\": 25\n\t\t\t}\n\t\t],\n\t\t\"type\": \"rpc\",\n\t\t\"tid\": 1\n\t}\n]"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "gets a list of all contacts associated with the stream manager."
          },
          "response": []
        },
        {
          "_postman_id": "eb3c0b85-9c96-4b24-8f7e-967d330db4bb",
          "name": "Get All Appliances",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "523b5782-12a9-4a8e-8ee7-4bca8c45a8c3",
                "exec": [
                  "pm.test(\"C123398 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\t\"action\": \"Appliance\",\n\t\t\"method\": \"getAppliances\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"page\": 1,\n\t\t\t\t\"start\": 0,\n\t\t\t\t\"limit\": 25,\n\t\t\t\t\"group\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"location_name\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"sort\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"location_name\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"type\": \"rpc\",\n\t\t\"tid\": 2\n\t}"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "gets a list of all appliances"
          },
          "response": []
        },
        {
          "_postman_id": "98f00c88-89e6-4f3d-93e4-1a9fee51ea2f",
          "name": "Get all issue streams",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3210c158-8837-41a2-97ff-5fbb4016ead3",
                "exec": [
                  "pm.test(\"C123401 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\t\"action\": \"Streams\",\n\t\t\"method\": \"getIssueStreams\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"page\": 1,\n\t\t\t\t\"start\": 0,\n\t\t\t\t\"limit\": 25,\n\t\t\t\t\"group\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"sort\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"name\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"type\": \"rpc\",\n\t\t\"tid\": 3\n\t}"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "gets a list of all issue streams from stream manager."
          },
          "response": []
        },
        {
          "_postman_id": "60a9209f-b654-4e68-a9c6-a74988b38bc3",
          "name": "Get all Locations",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "26e22d2e-a6f2-4614-b6da-0e1d0fd512de",
                "exec": [
                  "pm.test(\"C123399 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n\t{\n\t\t\"action\": \"Location\",\n\t\t\"method\": \"getLocations\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"page\": 1,\n\t\t\t\t\"start\": 0,\n\t\t\t\t\"limit\": 25\n\t\t\t}\n\t\t],\n\t\t\"type\": \"rpc\",\n\t\t\"tid\": 4\n\t}\n]"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "gets a list of all locations associated with a stream manager"
          },
          "response": []
        },
        {
          "_postman_id": "91ae61a7-5ecc-4c6e-8337-9d939ff1c11f",
          "name": "Get all offline sfs streams",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ea61cd6c-d14d-4c10-87e0-3545c4079013",
                "exec": [
                  "pm.test(\"C123400 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n\t\t{\n\t\t\"action\": \"Streams\",\n\t\t\"method\": \"getOfflineSfsStreams\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"offlineAppliance\": \"Media\",\n\t\t\t\t\"page\": 1,\n\t\t\t\t\"start\": 0,\n\t\t\t\t\"limit\": 25,\n\t\t\t\t\"group\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"sort\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"name\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"type\": \"rpc\",\n\t\t\"tid\": 5\n\t}\n]"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "gets a list of all offlined sfs streams from stream manager."
          },
          "response": []
        },
        {
          "_postman_id": "52d29a84-643f-4153-9375-a7e41ee1f376",
          "name": "Get all offlined streams no media flag",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a52af66e-6564-479f-85fc-78e49c204817",
                "exec": [
                  "pm.test(\"C78163 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n\t{\n\t\t\"action\": \"Streams\",\n\t\t\"method\": \"getOfflineSfsStreams\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"page\": 1,\n\t\t\t\t\"start\": 0,\n\t\t\t\t\"limit\": 25,\n\t\t\t\t\"group\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"sort\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"name\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"type\": \"rpc\",\n\t\t\"tid\": 6\n\t}\n]"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "This technically has its own TID. Im not really sure how much it differs from Get all offline sfs streams. The only difference is that there is no type: media property in this one."
          },
          "response": []
        },
        {
          "_postman_id": "38791413-6153-43b4-905f-782fe30caec4",
          "name": "Get  sfs capacity",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7b1669e5-c2f8-449d-a1f3-7e2a4eca6d9d",
                "exec": [
                  "pm.test(\"C123402 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n\t{\n\t\t\"action\": \"Capacity\",\n\t\t\"method\": \"getSfsCapacity\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"page\": 1,\n\t\t\t\t\"start\": 0,\n\t\t\t\t\"limit\": 25\n\t\t\t}\n\t\t],\n\t\t\"type\": \"rpc\",\n\t\t\"tid\": 7\n\t}\n]"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "Returns a list of connected appliances and their current connections and streamcount."
          },
          "response": []
        },
        {
          "_postman_id": "d09e4776-e9fe-4159-ad4f-e6f15cea9870",
          "name": "Get all offline streams SSL VPN",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d9c63487-9f93-4637-98c1-71cf367ceb72",
                "exec": [
                  "pm.test(\"C78165 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n\t{\n\t\t\"action\": \"Streams\",\n\t\t\"method\": \"getOfflineSfsStreams\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"offlineAppliance\": \"SSL VPN\",\n\t\t\t\t\"page\": 1,\n\t\t\t\t\"start\": 0,\n\t\t\t\t\"limit\": 25,\n\t\t\t\t\"group\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"sort\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"name\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"type\": \"rpc\",\n\t\t\"tid\": 8\n\t}\n]"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "offline appliace = SSL VPN"
          },
          "response": []
        },
        {
          "_postman_id": "2b33350c-53b7-45bd-bb42-198da44444a1",
          "name": "Get all streams",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7abfae09-2dc8-421e-a8c0-32b99e03a824",
                "exec": [
                  "pm.test(\"C123403 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n\t{\n\t\t\"action\": \"Streams\",\n\t\t\"method\": \"getGrid\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"page\": 1,\n\t\t\t\t\"start\": 0,\n\t\t\t\t\"limit\": 25,\n\t\t\t\t\"group\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"sort\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"property\": \"name\",\n\t\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"type\": \"rpc\",\n\t\t\"tid\": 9\n\t}\n]"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "gets a list of all streams (grid)"
          },
          "response": []
        },
        {
          "_postman_id": "5495183a-5b75-43ee-8200-490e7d54fc0f",
          "name": "Get all users",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "db8bbf11-03dd-43d1-8612-7215cafecab6",
                "exec": [
                  "pm.test(\"C123404 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n\t{\n\t\t\"action\": \"Users\",\n\t\t\"method\": \"getUsers\",\n\t\t\"data\": null,\n\t\t\"type\": \"rpc\",\n\t\t\"tid\": 10\n\t}\n]"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "Retrieves a list of users. if you are an admin, you should see all the users. if you are an operator, you should only see yourself."
          },
          "response": []
        },
        {
          "_postman_id": "412ae572-d47e-4c54-a5a3-77c321226f61",
          "name": "Get all zones",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "41b1a442-474c-42c5-a538-eb588d29a1a7",
                "exec": [
                  "pm.test(\"C123405 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n\t{\n\t\t\"action\": \"Zone\",\n\t\t\"method\": \"getZones\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"page\": 1,\n\t\t\t\t\"start\": 0,\n\t\t\t\t\"limit\": 25\n\t\t\t}\n\t\t],\n\t\t\"type\": \"rpc\",\n\t\t\"tid\": 11\n\t}\n]"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "Gets a list of all zones in stream manager"
          },
          "response": []
        },
        {
          "_postman_id": "668893c0-bc60-49e8-9aac-f495f95a2a5e",
          "name": "Get Stream Map",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e5b299d5-3abd-42ad-89b8-cb71210d6735",
                "exec": [
                  "//this API gets information for stream test_stream_alpha, which has a metadata_id of 1",
                  "",
                  "pm.test(\"C78169 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"action\": \"Streams\",\n\t\"method\": \"getStreamMap\",\n\t\"data\": [\n\t\t{\n\t\t\t\"metadataId\": {{metadata_id}}\n\t\t}\n\t],\n\t\"type\": \"rpc\",\n\t\"tid\": 17\n}"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "gets a stream map of a test stream based on its metadata_id"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "b375f5b0-f119-4c82-a391-8ce1c4ddbdd4",
      "name": "Reports",
      "description": "these are the APIs which are called when you view reports in the reports tab of stream manager.",
      "item": [
        {
          "_postman_id": "eba85d2e-3788-464f-9d55-d07e5fbff231",
          "name": "Login Operator",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aeac104d-906a-4223-abea-c688504db648",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "    ",
                  "pm.test(\"Body IsAdministrator field to show it is logged in\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"IsAdministrator=false ;\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "user",
                  "type": "text",
                  "value": "{{user}}"
                },
                {
                  "key": "password",
                  "type": "text",
                  "value": "{{password}}"
                }
              ]
            },
            "url": "{{url}}",
            "description": "logs in with a valid username\nadmin - admin / sm1000\noperator - operator / sm1000"
          },
          "response": []
        },
        {
          "_postman_id": "1d53e74b-7263-4795-aca0-39e15f562615",
          "name": "getAllStreamStatus",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5bb8f8e4-838d-4008-ad62-f9b3e552c10b",
                "exec": [
                  "pm.test(\"C78184 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"action\": \"Streams\",\n\t\"method\": \"getAllStreamStatus\",\n\t\"data\": [\n\t\t{\n\t\t\t\"page\": 1,\n\t\t\t\"start\": 0,\n\t\t\t\"limit\": 25,\n\t\t\t\"sort\": [\n\t\t\t\t{\n\t\t\t\t\t\"property\": \"name\",\n\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"type\": \"rpc\",\n\t\"tid\": 22\n}"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "this is the response from using the 'Current status' report in stream manager."
          },
          "response": []
        },
        {
          "_postman_id": "080556f1-0065-48b0-af06-85c827fb9da4",
          "name": "Stream metadata report",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9309f386-78cc-4e1f-92f1-0153d75e9154",
                "exec": [
                  "pm.test(\"C78185 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"action\": \"Streams\",\n\t\"method\": \"getGrid\",\n\t\"data\": [\n\t\t{\n\t\t\t\"page\": 1,\n\t\t\t\"start\": 0,\n\t\t\t\"limit\": 25,\n\t\t\t\"group\": [\n\t\t\t\t{\n\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"sort\": [\n\t\t\t\t{\n\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"property\": \"name\",\n\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"type\": \"rpc\",\n\t\"tid\": 23\n}"
            },
            "url": "{{url}}/{{version}}/direct/router",
            "description": "this is the response when you get data for the 'stream metadata' report in stream manager."
          },
          "response": []
        },
        {
          "_postman_id": "571eec58-31f2-4e06-bbdd-3170e556e335",
          "name": "stream network config report",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fc3fe377-5c3a-4b40-bd5a-d93dacb54412",
                "exec": [
                  "pm.test(\"C78186 Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"action\": \"Streams\",\n\t\"method\": \"getGrid\",\n\t\"data\": [\n\t\t{\n\t\t\t\"page\": 1,\n\t\t\t\"start\": 0,\n\t\t\t\"limit\": 25,\n\t\t\t\"group\": [\n\t\t\t\t{\n\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"sort\": [\n\t\t\t\t{\n\t\t\t\t\t\"property\": \"jurisdiction\",\n\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"property\": \"name\",\n\t\t\t\t\t\"direction\": \"ASC\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"type\": \"rpc\",\n\t\"tid\": 24\n}"
            },
            "url": "{{url}}/{{version}}/direct/router"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "911c3056-57cd-497f-bc16-d88b1c6e77c4",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "6069576c-b186-472b-ad5d-c7054bb9a008",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}